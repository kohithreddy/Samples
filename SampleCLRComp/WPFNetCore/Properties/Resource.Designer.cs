//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFNetCore.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WPFNetCore.Properties.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access Level.
        /// </summary>
        internal static string ACCESS_CONTROL_ACCESS_LEVEL {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_ACCESS_LEVEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the level of access for this client. Do not select Read/Write if your application includes safety-related outputs..
        /// </summary>
        internal static string ACCESS_CONTROL_ACCESS_LEVEL_DESCR {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_ACCESS_LEVEL_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string ACCESS_CONTROL_ENABLED {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable access control for this TCM. If False, all users can access TCM resources. If True, you MUST configure a client with TriStation protocol access, or you will be unable to connect to the controller after the next download..
        /// </summary>
        internal static string ACCESS_CONTROL_ENABLED_DESCR {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_ENABLED_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address.
        /// </summary>
        internal static string ACCESS_CONTROL_IP_ADDRESS {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_IP_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the IP address of the client you want to configure access for..
        /// </summary>
        internal static string ACCESS_CONTROL_IP_ADDRESS_DESCR {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_IP_ADDRESS_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network.
        /// </summary>
        internal static string ACCESS_CONTROL_NETWORK {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the network(s) this client can access the TCM on..
        /// </summary>
        internal static string ACCESS_CONTROL_NETWORK_DESCR {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_NETWORK_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocols.
        /// </summary>
        internal static string ACCESS_CONTROL_PROTOCOLS {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_PROTOCOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the protocol(s) this client can use to access the TCM. Click a value once to select it; click it again to clear the selection..
        /// </summary>
        internal static string ACCESS_CONTROL_PROTOCOLS_DESCR {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_PROTOCOLS_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client {0}.
        /// </summary>
        internal static string ACCESS_CONTROL_SUBGROUP_CLIENT {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_SUBGROUP_CLIENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subnet Mask.
        /// </summary>
        internal static string ACCESS_CONTROL_SUBNET_MASK {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_SUBNET_MASK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the IP address for the subnet mask. Use this property to create groups of IP addresses with the same access level. The default selects all client IP addresses on the subnet..
        /// </summary>
        internal static string ACCESS_CONTROL_SUBNET_MASK_DESCR {
            get {
                return ResourceManager.GetString("ACCESS_CONTROL_SUBNET_MASK_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALERT: The configuration has been changed, but not yet saved. Unsaved changes to the configuration will be included in the exported file. Do you want to continue?.
        /// </summary>
        internal static string ALERT_EXPORT_UNSAVED_CONFIG {
            get {
                return ResourceManager.GetString("ALERT_EXPORT_UNSAVED_CONFIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALERT: The configuration has been changed, but not yet saved. Unsaved changes to the configuration will be overwritten by the settings in the imported file. Do you want to continue?.
        /// </summary>
        internal static string ALERT_IMPORT_UNSAVED_CONFIG {
            get {
                return ResourceManager.GetString("ALERT_IMPORT_UNSAVED_CONFIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more Modbus TCP IP addresses are not on the same subnet as the TCM..
        /// </summary>
        internal static string ALERT_MANY_TCPIP_INVALID_ON_SUBNET {
            get {
                return ResourceManager.GetString("ALERT_MANY_TCPIP_INVALID_ON_SUBNET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serial connection transmission speed in bits per second (bps)..
        /// </summary>
        internal static string COMM_PARAM_DESC_BAUD_RATE {
            get {
                return ResourceManager.GetString("COMM_PARAM_DESC_BAUD_RATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default method for connecting to the controller..
        /// </summary>
        internal static string COMM_PARAM_DESC_DEFAULT_CONNECTION_TYPE {
            get {
                return ResourceManager.GetString("COMM_PARAM_DESC_DEFAULT_CONNECTION_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a specific port for transferring a project file to/from the controller..
        /// </summary>
        internal static string COMM_PARAM_DESC_DESIGNATE_TCP_PORT {
            get {
                return ResourceManager.GetString("COMM_PARAM_DESC_DESIGNATE_TCP_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP address for the TCM port connected to the network..
        /// </summary>
        internal static string COMM_PARAM_DESC_IP_ADDRESS {
            get {
                return ResourceManager.GetString("COMM_PARAM_DESC_IP_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Located on the front panel of the Main Chassis or MP-TCM Baseplate..
        /// </summary>
        internal static string COMM_PARAM_DESC_NODE_NUMBER {
            get {
                return ResourceManager.GetString("COMM_PARAM_DESC_NODE_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM port on TriStation workstation the serial cable is connected to..
        /// </summary>
        internal static string COMM_PARAM_DESC_SERIAL_PORT {
            get {
                return ResourceManager.GetString("COMM_PARAM_DESC_SERIAL_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller name. Use the default or enter your own..
        /// </summary>
        internal static string COMM_PARAM_DESC_SYSTEM_NAME {
            get {
                return ResourceManager.GetString("COMM_PARAM_DESC_SYSTEM_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a unique TCP port number. Configure your firewall to allow communication on this port. .
        /// </summary>
        internal static string COMM_PARAM_DESC_TCP_PORT {
            get {
                return ResourceManager.GetString("COMM_PARAM_DESC_TCP_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port used for connection. Must be same as in TCM configuration.                 .
        /// </summary>
        internal static string COMM_PARAM_DESC_UDP_PORT {
            get {
                return ResourceManager.GetString("COMM_PARAM_DESC_UDP_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure a connection to the controller over the network..
        /// </summary>
        internal static string COMM_PARAM_DESC_USE_NETWORK_CONNECTION {
            get {
                return ResourceManager.GetString("COMM_PARAM_DESC_USE_NETWORK_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure a connection to the controller via a serial cable..
        /// </summary>
        internal static string COMM_PARAM_DESC_USE_SERIAL_CONNECTION {
            get {
                return ResourceManager.GetString("COMM_PARAM_DESC_USE_SERIAL_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Baud Rate.
        /// </summary>
        internal static string COMM_PARAM_NAME_BAUD_RATE {
            get {
                return ResourceManager.GetString("COMM_PARAM_NAME_BAUD_RATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Connection Type.
        /// </summary>
        internal static string COMM_PARAM_NAME_DEFAULT_CONNECTION_TYPE {
            get {
                return ResourceManager.GetString("COMM_PARAM_NAME_DEFAULT_CONNECTION_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Designate TCP Port for Project File Transfer.
        /// </summary>
        internal static string COMM_PARAM_NAME_DESIGNATE_TCP_PORT {
            get {
                return ResourceManager.GetString("COMM_PARAM_NAME_DESIGNATE_TCP_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address.
        /// </summary>
        internal static string COMM_PARAM_NAME_IP_ADDRESS {
            get {
                return ResourceManager.GetString("COMM_PARAM_NAME_IP_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node Number.
        /// </summary>
        internal static string COMM_PARAM_NAME_NODE_NUMBER {
            get {
                return ResourceManager.GetString("COMM_PARAM_NAME_NODE_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serial Port.
        /// </summary>
        internal static string COMM_PARAM_NAME_SERIAL_PORT {
            get {
                return ResourceManager.GetString("COMM_PARAM_NAME_SERIAL_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Name.
        /// </summary>
        internal static string COMM_PARAM_NAME_SYSTEM_NAME {
            get {
                return ResourceManager.GetString("COMM_PARAM_NAME_SYSTEM_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TCP Port.
        /// </summary>
        internal static string COMM_PARAM_NAME_TCP_PORT {
            get {
                return ResourceManager.GetString("COMM_PARAM_NAME_TCP_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UDP Port.
        /// </summary>
        internal static string COMM_PARAM_NAME_UDP_PORT {
            get {
                return ResourceManager.GetString("COMM_PARAM_NAME_UDP_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Network Connection.
        /// </summary>
        internal static string COMM_PARAM_NAME_USE_NETWORK_CONNECTION {
            get {
                return ResourceManager.GetString("COMM_PARAM_NAME_USE_NETWORK_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Serial Connection.
        /// </summary>
        internal static string COMM_PARAM_NAME_USE_SERIAL_CONNECTION {
            get {
                return ResourceManager.GetString("COMM_PARAM_NAME_USE_SERIAL_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM1.
        /// </summary>
        internal static string DEFAULT_COM_1 {
            get {
                return ResourceManager.GetString("DEFAULT_COM_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM2.
        /// </summary>
        internal static string DEFAULT_COM_2 {
            get {
                return ResourceManager.GetString("DEFAULT_COM_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM3.
        /// </summary>
        internal static string DEFAULT_COM_3 {
            get {
                return ResourceManager.GetString("DEFAULT_COM_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM4.
        /// </summary>
        internal static string DEFAULT_COM_4 {
            get {
                return ResourceManager.GetString("DEFAULT_COM_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network.
        /// </summary>
        internal static string DEFAULT_CONNECTION_TYPE_NETWORK {
            get {
                return ResourceManager.GetString("DEFAULT_CONNECTION_TYPE_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serial.
        /// </summary>
        internal static string DEFAULT_CONNECTION_TYPE_SERIAL {
            get {
                return ResourceManager.GetString("DEFAULT_CONNECTION_TYPE_SERIAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TRINODE{0}.
        /// </summary>
        internal static string DEFAULT_SYSTEM_NAME {
            get {
                return ResourceManager.GetString("DEFAULT_SYSTEM_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This value can’t be changed while the project is in the Download Changes state..
        /// </summary>
        internal static string ERROR_CANNOT_MODIFY_WHEN_DLC {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_MODIFY_WHEN_DLC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Errors and/or alerts were detected during the Peer-to-Peer configuration import process. See %s for details..
        /// </summary>
        internal static string ERROR_DETECTED_P2P_IMPORT {
            get {
                return ResourceManager.GetString("ERROR_DETECTED_P2P_IMPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the TCM access control list is enabled, at least one installed TCM per system must have a client with TriStation Read/Write access, in order to allow future changes to the application running on the controller.
        ///
        ///Either configure a client with Read/Write access to the controller using the TriStation protocol, or disable the TCM access control list..
        /// </summary>
        internal static string ERROR_ENABLE_ACCESS_CONTROL {
            get {
                return ResourceManager.GetString("ERROR_ENABLE_ACCESS_CONTROL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the TCM access control list is enabled, at least one installed TCM per system must have a client with TriStation Read/Write access, in order to allow future changes to the application running on the controller. Either configure a client with Read/Write access to the controller using the TriStation protocol, or disable the TCM access control list..
        /// </summary>
        internal static string ERROR_ENABLE_ACCESS_CONTROL_MSG {
            get {
                return ResourceManager.GetString("ERROR_ENABLE_ACCESS_CONTROL_MSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid selection. You must select a value that is available in the drop-down list..
        /// </summary>
        internal static string ERROR_INVALID_COMBOBOX_VALUE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_COMBOBOX_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Gateway IP Address. Enter a gateway IP address that is on the same subnet as the TCM..
        /// </summary>
        internal static string ERROR_INVALID_GATEWAY {
            get {
                return ResourceManager.GetString("ERROR_INVALID_GATEWAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Default Gateway IP Address. Verify the address is in the correct format or in a valid range..
        /// </summary>
        internal static string ERROR_INVALID_GATEWAY_IP {
            get {
                return ResourceManager.GetString("ERROR_INVALID_GATEWAY_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Highest TCP Port Number. Enter a port number that is greater than the Lowest TCP Port Number..
        /// </summary>
        internal static string ERROR_INVALID_HIGHEST_PORT {
            get {
                return ResourceManager.GetString("ERROR_INVALID_HIGHEST_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid IP address. Verify the address is in the correct format..
        /// </summary>
        internal static string ERROR_INVALID_IP_ADDRESS {
            get {
                return ResourceManager.GetString("ERROR_INVALID_IP_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected port is configured for the Modbus TCP Client protocol. You must enter a valid server node IP address..
        /// </summary>
        internal static string ERROR_INVALID_IP_MODBUS_TCP_CLIENT {
            get {
                return ResourceManager.GetString("ERROR_INVALID_IP_MODBUS_TCP_CLIENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid IP Address and Subnet Mask address combination. The IP address must be within the subnet mask range..
        /// </summary>
        internal static string ERROR_INVALID_IP_SUBNET_COMBO {
            get {
                return ResourceManager.GetString("ERROR_INVALID_IP_SUBNET_COMBO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Lowest TCP Port Number. Enter a port number that is less than the Highest TCP Port Number..
        /// </summary>
        internal static string ERROR_INVALID_LOWEST_PORT {
            get {
                return ResourceManager.GetString("ERROR_INVALID_LOWEST_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid IP address. Verify the address is in the correct format or in a valid range..
        /// </summary>
        internal static string ERROR_INVALID_NET_IP {
            get {
                return ResourceManager.GetString("ERROR_INVALID_NET_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is an invalid Subnet Mask address..
        /// </summary>
        internal static string ERROR_INVALID_SUBNET {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SUBNET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Gateway IP Address and Subnet Mask address combination. The IP address must be within the subnet mask range..
        /// </summary>
        internal static string ERROR_INVALID_SUBNET_GATEWAY_COMBO {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SUBNET_GATEWAY_COMBO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Subnet Mask address..
        /// </summary>
        internal static string ERROR_INVALID_SUBNET_MASK {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SUBNET_MASK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Subnet Mask address..
        /// </summary>
        internal static string ERROR_INVALID_SUBNETMASK {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SUBNETMASK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This network address configuration conflicts with one or more destination node IP addresses configured in the Routing section. Saving this configuration will reset the affected destination node(s) to the default values.
        ///
        ///Click Yes to continue, or click No to keep the previously saved configuration..
        /// </summary>
        internal static string ERROR_IP_CONFLICT_WITH_ROUTING {
            get {
                return ResourceManager.GetString("ERROR_IP_CONFLICT_WITH_ROUTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Default Gateway IP Address. The default gateway address must match the network IP address on the enabled port..
        /// </summary>
        internal static string ERROR_IP_GATEWAY_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_IP_GATEWAY_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified IP address is invalid..
        /// </summary>
        internal static string ERROR_IP_INVALID {
            get {
                return ResourceManager.GetString("ERROR_IP_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid SNTP Server IP Address. Enter an IP address that is on the same subnet as the TCM..
        /// </summary>
        internal static string ERROR_IP_INVALID_ON_SUBNET {
            get {
                return ResourceManager.GetString("ERROR_IP_INVALID_ON_SUBNET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Modbus Range: Maximum. Enter a number that is greater than or equal to the Modbus Range: Minimum..
        /// </summary>
        internal static string ERROR_MODBUS_MAX_RANGE {
            get {
                return ResourceManager.GetString("ERROR_MODBUS_MAX_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Modbus Range: Minimum. Enter a number that is less than or equal to the Modbus Range: Maximum..
        /// </summary>
        internal static string ERROR_MODBUS_MIN_RANGE {
            get {
                return ResourceManager.GetString("ERROR_MODBUS_MIN_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid system name. The name must have at least {0}, but no more than {1}, characters..
        /// </summary>
        internal static string ERROR_MSG_INVALID_SYSTEM_NAME {
            get {
                return ResourceManager.GetString("ERROR_MSG_INVALID_SYSTEM_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid system name. You cannot use Unicode (non-English) characters in system names..
        /// </summary>
        internal static string ERROR_MSG_INVALID_SYSTEM_NAME_NON_ENGLISH {
            get {
                return ResourceManager.GetString("ERROR_MSG_INVALID_SYSTEM_NAME_NON_ENGLISH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid node number. Must be in the range {0} - {1}..
        /// </summary>
        internal static string ERROR_MSG_NODE_NUMBER {
            get {
                return ResourceManager.GetString("ERROR_MSG_NODE_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid selection. The number of days must be in the range {0} - {1}..
        /// </summary>
        internal static string ERROR_MSG_NUMBER_OF_DAYS_BEFORE_ALARM_GEN {
            get {
                return ResourceManager.GetString("ERROR_MSG_NUMBER_OF_DAYS_BEFORE_ALARM_GEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid multicast update rate. Must be in the range {0} - {1}..
        /// </summary>
        internal static string ERROR_MSG_PROTOCOL_UPDATE_RATE {
            get {
                return ResourceManager.GetString("ERROR_MSG_PROTOCOL_UPDATE_RATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid TCP port number. Must be in the range {0} - {1}..
        /// </summary>
        internal static string ERROR_MSG_TCP_PORT_NUMBER {
            get {
                return ResourceManager.GetString("ERROR_MSG_TCP_PORT_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid UDP port number. Must be in the range {0} - {1}..
        /// </summary>
        internal static string ERROR_MSG_UDP_PORT_NUMBER {
            get {
                return ResourceManager.GetString("ERROR_MSG_UDP_PORT_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid IP Address for node {0}. Enter an IP address that is on the same subnet as the TCM..
        /// </summary>
        internal static string ERROR_P2P_IP_INVALID_ON_SUBNET {
            get {
                return ResourceManager.GetString("ERROR_P2P_IP_INVALID_ON_SUBNET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to paste. Property is not enabled..
        /// </summary>
        internal static string ERROR_PASTE_CELL_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_PASTE_CELL_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to paste communication module properties because one or more values in the ID column were modified..
        /// </summary>
        internal static string ERROR_PASTE_INVALID_ID_DETECTED {
            get {
                return ResourceManager.GetString("ERROR_PASTE_INVALID_ID_DETECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to paste row: {0} &gt; {1} &gt; {2} because the property could not be found. Verify the Group, Subgroup and Property values in the copied data were not modified..
        /// </summary>
        internal static string ERROR_PASTE_INVALID_PROPERTY_DETECTED {
            get {
                return ResourceManager.GetString("ERROR_PASTE_INVALID_PROPERTY_DETECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port number you entered is reserved for Firmware Manager. See Help for more information about reserved UDP port numbers..
        /// </summary>
        internal static string ERROR_PORT_FIRMWARE_MANAGER {
            get {
                return ResourceManager.GetString("ERROR_PORT_FIRMWARE_MANAGER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port number you entered is either reserved or currently being used for the {0}. See Help for a complete list of reserved TCP and UDP port numbers..
        /// </summary>
        internal static string ERROR_PORT_HART_TCP_UDP_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_PORT_HART_TCP_UDP_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port number you entered is either reserved or currently being used by the Peer-to-Peer UDP protocol. See Help for a complete list of reserved UDP port numbers..
        /// </summary>
        internal static string ERROR_PORT_PEER_TO_PEER {
            get {
                return ResourceManager.GetString("ERROR_PORT_PEER_TO_PEER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port number you entered is either reserved or currently being used for the {0}. See Help for a complete list of reserved TCP port numbers..
        /// </summary>
        internal static string ERROR_PORT_PRINTER_TCP_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_PORT_PRINTER_TCP_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port number you entered is either reserved or currently being used for HART DTM. See Help for a complete list of reserved UDP port numbers..
        /// </summary>
        internal static string ERROR_PORT_TS_HART_DTM {
            get {
                return ResourceManager.GetString("ERROR_PORT_TS_HART_DTM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port number you entered is either reserved or currently being used for HART-IP. See Help for a complete list of reserved UDP port numbers..
        /// </summary>
        internal static string ERROR_PORT_TS_HART_IP {
            get {
                return ResourceManager.GetString("ERROR_PORT_TS_HART_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port number you entered is either reserved or currently being used by the Triconex Management protocol. See Help for a complete list of reserved UDP port numbers..
        /// </summary>
        internal static string ERROR_PORT_TS_MANAGEMENT_PROTOCOL {
            get {
                return ResourceManager.GetString("ERROR_PORT_TS_MANAGEMENT_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port number you entered is either reserved or currently being used by the TriStation protocol. See Help for a complete list of reserved UDP port numbers..
        /// </summary>
        internal static string ERROR_PORT_TS_PROTOCOL {
            get {
                return ResourceManager.GetString("ERROR_PORT_TS_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port number you entered is either reserved or currently being used by the TSAA protocol. See Help for a complete list of reserved UDP port numbers..
        /// </summary>
        internal static string ERROR_PORT_TSAA_PROTOCOL {
            get {
                return ResourceManager.GetString("ERROR_PORT_TSAA_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid line width number. Must be in the range {0} - {1}..
        /// </summary>
        internal static string ERROR_PRINTER_LINE_WIDTH {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_LINE_WIDTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot use the same printer number for the Left and Right slots. Enter a unique number for each slot..
        /// </summary>
        internal static string ERROR_PRINTER_NUMBER {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must enter a valid Server IP Address before you can configure the Printer Number..
        /// </summary>
        internal static string ERROR_PRINTER_NUMBER_INVALID_IP {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_NUMBER_INVALID_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Server IP Address. Enter a print server IP address that is on the same subnet as the TCM..
        /// </summary>
        internal static string ERROR_PRINTER_TCM_SUBNET {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_TCM_SUBNET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Saving this configuration will reset the IP Address to the default values.
        ///
        ///Click Yes to continue, or No to return to the previously saved configuration.
        /// </summary>
        internal static string ERROR_RESET_IPADDRESS_CONFIRMATION {
            get {
                return ResourceManager.GetString("ERROR_RESET_IPADDRESS_CONFIRMATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination IP address and the destination Gateway address of the destination node {0} MUST be either both zero or both non-zero..
        /// </summary>
        internal static string ERROR_ROUTING_GATEWAY_INVALID {
            get {
                return ResourceManager.GetString("ERROR_ROUTING_GATEWAY_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Gateway IP Address for destination node {0}. Enter an IP address that is on the same subnet as the TCM..
        /// </summary>
        internal static string ERROR_ROUTING_GATEWAY_NOTCONNECTED {
            get {
                return ResourceManager.GetString("ERROR_ROUTING_GATEWAY_NOTCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a value between 1 and 32..
        /// </summary>
        internal static string ERROR_SERIALPORT_LOG_PORT_INVALID {
            get {
                return ResourceManager.GetString("ERROR_SERIALPORT_LOG_PORT_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a value between 0 and 255..
        /// </summary>
        internal static string ERROR_SERIALPORT_SERVER_ADDRESS_INVALID {
            get {
                return ResourceManager.GetString("ERROR_SERIALPORT_SERVER_ADDRESS_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Modbus TCP Client IP Address. Enter an IP address that is on the same subnet as the TCM..
        /// </summary>
        internal static string ERROR_TCPIP_INVALID_ON_SUBNET {
            get {
                return ResourceManager.GetString("ERROR_TCPIP_INVALID_ON_SUBNET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid SNTP ServerIP Address. Enter an IP address that is not reserved for special purposes..
        /// </summary>
        internal static string ERROR_TIMESYNC_IP_RESERVED {
            get {
                return ResourceManager.GetString("ERROR_TIMESYNC_IP_RESERVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must enter a SNTP Server IP Address..
        /// </summary>
        internal static string ERROR_TIMESYNC_IPADDRESS_BLANK {
            get {
                return ResourceManager.GetString("ERROR_TIMESYNC_IPADDRESS_BLANK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TriStation protocol has already been configured for {0}. You cannot configure this protocol for both serial ports..
        /// </summary>
        internal static string ERROR_TS_PROTOCOL_CONFIGURED_ALREADY {
            get {
                return ResourceManager.GetString("ERROR_TS_PROTOCOL_CONFIGURED_ALREADY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a value between {0} and {1}..
        /// </summary>
        internal static string ERROR_VALUE_NOT_IN_RANGE {
            get {
                return ResourceManager.GetString("ERROR_VALUE_NOT_IN_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware Manager.
        /// </summary>
        internal static string FIRMWARE_MANAGER {
            get {
                return ResourceManager.GetString("FIRMWARE_MANAGER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HART DTM.
        /// </summary>
        internal static string HART_DTM {
            get {
                return ResourceManager.GetString("HART_DTM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string HART_DTM_ENABLED {
            get {
                return ResourceManager.GetString("HART_DTM_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow clients to access HART data via the Triconex Controller DTM. Enabling HART DTM on multiple TCMs will reduce communication speed. Supported only for modules installed in COM1: Left..
        /// </summary>
        internal static string HART_DTM_ENABLED_DESCR {
            get {
                return ResourceManager.GetString("HART_DTM_ENABLED_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NET 1 Port.
        /// </summary>
        internal static string HART_DTM_NET1_PORT {
            get {
                return ResourceManager.GetString("HART_DTM_NET1_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the TCP port number used for connections on NET 1, in the range 0 - 65535. Enter 0 to disable HART on this port. Cannot be the same as a HART-IP port number..
        /// </summary>
        internal static string HART_DTM_NET1_PORT_DESCR {
            get {
                return ResourceManager.GetString("HART_DTM_NET1_PORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NET 2 Port.
        /// </summary>
        internal static string HART_DTM_NET2_PORT {
            get {
                return ResourceManager.GetString("HART_DTM_NET2_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the TCP port number used for connections on NET 2, in the range 0 - 65535. Enter 0 to disable HART on this port. Cannot be the same as a HART-IP port number..
        /// </summary>
        internal static string HART_DTM_NET2_PORT_DESCR {
            get {
                return ResourceManager.GetString("HART_DTM_NET2_PORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Secure Connection.
        /// </summary>
        internal static string HART_DTM_USE_SECURE_CONNECTION {
            get {
                return ResourceManager.GetString("HART_DTM_USE_SECURE_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable secure HART communication through SSL. If enabled, you must also add certificates and private keys to your project..
        /// </summary>
        internal static string HART_DTM_USE_SECURE_CONNECTION_DESCR {
            get {
                return ResourceManager.GetString("HART_DTM_USE_SECURE_CONNECTION_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HART-IP.
        /// </summary>
        internal static string HART_IP {
            get {
                return ResourceManager.GetString("HART_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string HART_IP_ENABLED {
            get {
                return ResourceManager.GetString("HART_IP_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow HART device data to be transferred to an external HART-IP client via an IP-based network. Enabling HART-IP on multiple TCMs will reduce communication speed. Supported only for modules installed in COM1: Left..
        /// </summary>
        internal static string HART_IP_ENABLED_DESCR {
            get {
                return ResourceManager.GetString("HART_IP_ENABLED_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NET 1 Port.
        /// </summary>
        internal static string HART_IP_NET1_PORT {
            get {
                return ResourceManager.GetString("HART_IP_NET1_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the TCP port number for connections on NET 1, in the range 0 - 65535. Enter 0 to disable HART-IP on this port. Can be the same as the NET 2 port, but cannot be the same as a HART DTM port..
        /// </summary>
        internal static string HART_IP_NET1_PORT_DESCR {
            get {
                return ResourceManager.GetString("HART_IP_NET1_PORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NET 2 Port.
        /// </summary>
        internal static string HART_IP_NET2_PORT {
            get {
                return ResourceManager.GetString("HART_IP_NET2_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the TCP port number for connections on NET 2, in the range 0 - 65535. Enter 0 to disable HART-IP on this port. Can be the same as the NET 1 port, but cannot be the same as a HART DTM port..
        /// </summary>
        internal static string HART_IP_NET2_PORT_DESCR {
            get {
                return ResourceManager.GetString("HART_IP_NET2_PORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string HART_TSAA_ENABLED {
            get {
                return ResourceManager.GetString("HART_TSAA_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow TSAA clients to have read-only access to HART data using the TSAA protocol. Selected automatically when HART DTM or HART-IP are enabled. Supported only for modules installed in COM1: Left..
        /// </summary>
        internal static string HART_TSAA_ENABLED_DESCR {
            get {
                return ResourceManager.GetString("HART_TSAA_ENABLED_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP address of Ethernet IOP Bus Channel A..
        /// </summary>
        internal static string IOP_BUS_PARAM_DESC_IP_ADDRESS_A {
            get {
                return ResourceManager.GetString("IOP_BUS_PARAM_DESC_IP_ADDRESS_A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP address of Ethernet IOP Bus Channel B..
        /// </summary>
        internal static string IOP_BUS_PARAM_DESC_IP_ADDRESS_B {
            get {
                return ResourceManager.GetString("IOP_BUS_PARAM_DESC_IP_ADDRESS_B", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP address of Ethernet IOP Bus Channel C..
        /// </summary>
        internal static string IOP_BUS_PARAM_DESC_IP_ADDRESS_C {
            get {
                return ResourceManager.GetString("IOP_BUS_PARAM_DESC_IP_ADDRESS_C", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select to configure IOP Bus parameters if an IMFF is installed..
        /// </summary>
        internal static string IOP_BUS_PARAM_DESC_USE_IOP_BUS {
            get {
                return ResourceManager.GetString("IOP_BUS_PARAM_DESC_USE_IOP_BUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow an SFP transceiver to be used on the IOP Bus..
        /// </summary>
        internal static string IOP_BUS_PARAM_DESC_USE_SFP {
            get {
                return ResourceManager.GetString("IOP_BUS_PARAM_DESC_USE_SFP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address A.
        /// </summary>
        internal static string IOP_BUS_PARAM_NAME_IP_ADDRESS_A {
            get {
                return ResourceManager.GetString("IOP_BUS_PARAM_NAME_IP_ADDRESS_A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address B.
        /// </summary>
        internal static string IOP_BUS_PARAM_NAME_IP_ADDRESS_B {
            get {
                return ResourceManager.GetString("IOP_BUS_PARAM_NAME_IP_ADDRESS_B", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address C.
        /// </summary>
        internal static string IOP_BUS_PARAM_NAME_IP_ADDRESS_C {
            get {
                return ResourceManager.GetString("IOP_BUS_PARAM_NAME_IP_ADDRESS_C", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use IOP Bus.
        /// </summary>
        internal static string IOP_BUS_PARAM_NAME_USE_IOP_BUS {
            get {
                return ResourceManager.GetString("IOP_BUS_PARAM_NAME_USE_IOP_BUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use SFP.
        /// </summary>
        internal static string IOP_BUS_PARAM_NAME_USE_SFP {
            get {
                return ResourceManager.GetString("IOP_BUS_PARAM_NAME_USE_SFP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IOP Bus Parameters.
        /// </summary>
        internal static string IOP_BUS_PARAMETERS {
            get {
                return ResourceManager.GetString("IOP_BUS_PARAMETERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must perform a Download All after changing the Allow Points to Be Disabled property setting. However, you do not have the permissions required to perform a Download All. Contact your administrator to request the required permissions.
        ///
        ///The Allow Points to Be Disabled property setting will remain unchanged..
        /// </summary>
        internal static string LDAP_ALLOW_POINTS_PERMISSION {
            get {
                return ResourceManager.GetString("LDAP_ALLOW_POINTS_PERMISSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Data: Libraries (bytes).
        /// </summary>
        internal static string MEM_ALLOC_NAME_APP_DATA_LIBRARIES {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_APP_DATA_LIBRARIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Data: Programs (bytes).
        /// </summary>
        internal static string MEM_ALLOC_NAME_APP_DATA_PROGRAMS {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_APP_DATA_PROGRAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input: Read Aliased BOOLs (IBR).
        /// </summary>
        internal static string MEM_ALLOC_NAME_IN_RBOOL {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_IN_RBOOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input: Read Aliased DINTs (IIR).
        /// </summary>
        internal static string MEM_ALLOC_NAME_IN_RDINT {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_IN_RDINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input: Read Aliased REALs (IRR).
        /// </summary>
        internal static string MEM_ALLOC_NAME_IN_RREAL {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_IN_RREAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory: Unaliased BOOLs (MBN).
        /// </summary>
        internal static string MEM_ALLOC_NAME_MBN {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_MBN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory: Read Aliased BOOLs (MBR).
        /// </summary>
        internal static string MEM_ALLOC_NAME_MBR {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_MBR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory: Read/Write Aliased BOOLs (MBW).
        /// </summary>
        internal static string MEM_ALLOC_NAME_MBW {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_MBW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory: Unaliased DINTs (MIN).
        /// </summary>
        internal static string MEM_ALLOC_NAME_MIN {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_MIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory: Read Aliased DINTs (MIR).
        /// </summary>
        internal static string MEM_ALLOC_NAME_MIR {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_MIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory: Read/Write Aliased DINTs (MIW).
        /// </summary>
        internal static string MEM_ALLOC_NAME_MIW {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_MIW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory: Unaliased REALs (MRN).
        /// </summary>
        internal static string MEM_ALLOC_NAME_MRN {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_MRN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory: Read Aliased REALs (MRR).
        /// </summary>
        internal static string MEM_ALLOC_NAME_MRR {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_MRR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory: Read/Write Aliased REALs (MRW).
        /// </summary>
        internal static string MEM_ALLOC_NAME_MRW {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_MRW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output: Read/Write Aliased DINTs (QIW).
        /// </summary>
        internal static string MEM_ALLOC_NAME_OUT_RW_DINT {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_OUT_RW_DINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output: Read/Write Aliased BOOLs (QBW).
        /// </summary>
        internal static string MEM_ALLOC_NAME_OUT_RWBOOL {
            get {
                return ResourceManager.GetString("MEM_ALLOC_NAME_OUT_RWBOOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory Allocation.
        /// </summary>
        internal static string MEMORY_ALLOCATION {
            get {
                return ResourceManager.GetString("MEMORY_ALLOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear All Filters.
        /// </summary>
        internal static string MENU_CLEAR_ALL_FILTER {
            get {
                return ResourceManager.GetString("MENU_CLEAR_ALL_FILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Logical Port.
        /// </summary>
        internal static string MODBUS_CLIENT_LOGICAL_PORT {
            get {
                return ResourceManager.GetString("MODBUS_CLIENT_LOGICAL_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logical port number used by Modbus client functions to access this port. Must be unique for each TCM in a system. Available only when Modbus TCP Client is selected..
        /// </summary>
        internal static string MODBUS_CLIENT_LOGICAL_PORT_DESCR {
            get {
                return ResourceManager.GetString("MODBUS_CLIENT_LOGICAL_PORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Floating Point Ordering.
        /// </summary>
        internal static string MODBUS_FLOATING_POINT_ORDERING {
            get {
                return ResourceManager.GetString("MODBUS_FLOATING_POINT_ORDERING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select which section of a 32-bit floating point number is read first. High = first 16 bits. Low = last 16 bits..
        /// </summary>
        internal static string MODBUS_FLOATING_POINT_ORDERING_DESCR {
            get {
                return ResourceManager.GetString("MODBUS_FLOATING_POINT_ORDERING_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address.
        /// </summary>
        internal static string MODBUS_IP_ADDRESS {
            get {
                return ResourceManager.GetString("MODBUS_IP_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If using Modbus TCP Client, enter the server node&apos;s IP address. If using Modbus TCP Server, enter 0.0.0.0 to accept communication from any Modbus client; enter a specific client IP address to accept communication only from that Modbus client..
        /// </summary>
        internal static string MODBUS_IP_ADDRESS_DESCR {
            get {
                return ResourceManager.GetString("MODBUS_IP_ADDRESS_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modbus Range: Maximum.
        /// </summary>
        internal static string MODBUS_MODBUS_RANGE_MAXIMUM {
            get {
                return ResourceManager.GetString("MODBUS_MODBUS_RANGE_MAXIMUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximium REAL value that can be communicated over Modbus. Can be no more than 32767. Available only when Modbus TCP Server is selected..
        /// </summary>
        internal static string MODBUS_MODBUS_RANGE_MAXIMUM_DESCR {
            get {
                return ResourceManager.GetString("MODBUS_MODBUS_RANGE_MAXIMUM_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modbus Range: Minimum.
        /// </summary>
        internal static string MODBUS_MODBUS_RANGE_MINIMUM {
            get {
                return ResourceManager.GetString("MODBUS_MODBUS_RANGE_MINIMUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum REAL value that can be communicated over Modbus. Can be no less than -32768. Available only when Modbus TCP Server is selected..
        /// </summary>
        internal static string MODBUS_MODBUS_RANGE_MINIMUM_DESCR {
            get {
                return ResourceManager.GetString("MODBUS_MODBUS_RANGE_MINIMUM_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network.
        /// </summary>
        internal static string MODBUS_NETWORK {
            get {
                return ResourceManager.GetString("MODBUS_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the network this port is connected to..
        /// </summary>
        internal static string MODBUS_NETWORK_DESCR {
            get {
                return ResourceManager.GetString("MODBUS_NETWORK_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol.
        /// </summary>
        internal static string MODBUS_PROTOCOL {
            get {
                return ResourceManager.GetString("MODBUS_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the Modbus communication protocol for this port..
        /// </summary>
        internal static string MODBUS_PROTOCOL_DESCR {
            get {
                return ResourceManager.GetString("MODBUS_PROTOCOL_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port {0}.
        /// </summary>
        internal static string MODBUS_SUBGROUP_PORT {
            get {
                return ResourceManager.GetString("MODBUS_SUBGROUP_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TCP Port Number.
        /// </summary>
        internal static string MODBUS_TCP_PORT_NUMBER {
            get {
                return ResourceManager.GetString("MODBUS_TCP_PORT_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the TCP port number for this port..
        /// </summary>
        internal static string MODBUS_TCP_PORT_NUMBER_DESCR {
            get {
                return ResourceManager.GetString("MODBUS_TCP_PORT_NUMBER_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write Enabled.
        /// </summary>
        internal static string MODBUS_WRITE_ENABLED {
            get {
                return ResourceManager.GetString("MODBUS_WRITE_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Modbus writes to this port. Available only when Modbus TCP Server is selected..
        /// </summary>
        internal static string MODBUS_WRITE_ENABLED_DESCR {
            get {
                return ResourceManager.GetString("MODBUS_WRITE_ENABLED_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fill down operation cannot be performed because the number of changed modules will exceed 15. Changes to these modules cannot be made until you perform a Download Changes operation. However, additional changes to the 15 modules that have already had a change applied are still allowed. See Help for more information..
        /// </summary>
        internal static string MODULE_CHANGE_FILLDOWN {
            get {
                return ResourceManager.GetString("MODULE_CHANGE_FILLDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste operation cannot be performed because the number of changed modules will exceed 15. Changes to these modules cannot be made until you perform a Download Changes operation. However, additional changes to the 15 modules that have already had a change applied are still allowed. See Help for more information..
        /// </summary>
        internal static string MODULE_CHANGE_PASTE {
            get {
                return ResourceManager.GetString("MODULE_CHANGE_PASTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ACCESS CONTROL.
        /// </summary>
        internal static string NAVIGATION_ITEM_ACCESSCONTROL {
            get {
                return ResourceManager.GetString("NAVIGATION_ITEM_ACCESSCONTROL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALL.
        /// </summary>
        internal static string NAVIGATION_ITEM_ALL {
            get {
                return ResourceManager.GetString("NAVIGATION_ITEM_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HART.
        /// </summary>
        internal static string NAVIGATION_ITEM_HART {
            get {
                return ResourceManager.GetString("NAVIGATION_ITEM_HART", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MODBUS TCP.
        /// </summary>
        internal static string NAVIGATION_ITEM_MODBUSTCP {
            get {
                return ResourceManager.GetString("NAVIGATION_ITEM_MODBUSTCP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NETWORK.
        /// </summary>
        internal static string NAVIGATION_ITEM_NETWORK {
            get {
                return ResourceManager.GetString("NAVIGATION_ITEM_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PEER-TO-PEER.
        /// </summary>
        internal static string NAVIGATION_ITEM_PEERTOPEER {
            get {
                return ResourceManager.GetString("NAVIGATION_ITEM_PEERTOPEER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PRINTER.
        /// </summary>
        internal static string NAVIGATION_ITEM_PRINTER {
            get {
                return ResourceManager.GetString("NAVIGATION_ITEM_PRINTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PROTOCOLS.
        /// </summary>
        internal static string NAVIGATION_ITEM_PROTOCOLS {
            get {
                return ResourceManager.GetString("NAVIGATION_ITEM_PROTOCOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ROUTING.
        /// </summary>
        internal static string NAVIGATION_ITEM_ROUTING {
            get {
                return ResourceManager.GetString("NAVIGATION_ITEM_ROUTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SERIAL PORTS.
        /// </summary>
        internal static string NAVIGATION_ITEM_SERIALPORTS {
            get {
                return ResourceManager.GetString("NAVIGATION_ITEM_SERIALPORTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TIME SYNC.
        /// </summary>
        internal static string NAVIGATION_ITEM_TIMESYNC {
            get {
                return ResourceManager.GetString("NAVIGATION_ITEM_TIMESYNC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NONE.
        /// </summary>
        internal static string NONE {
            get {
                return ResourceManager.GetString("NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gateway IP Address.
        /// </summary>
        internal static string NW_PARAM_NAME_DEFGATEWAY {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_DEFGATEWAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the IP address of the default gateway. Must be part of the subnet..
        /// </summary>
        internal static string NW_PARAM_NAME_DEFGATEWAY_DESCR {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_DEFGATEWAY_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highest TCP Port.
        /// </summary>
        internal static string NW_PARAM_NAME_HIPORT {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_HIPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional) If the TCM is behind a firewall, the highest TCP port number that can be used for outgoing connections from the TCM. Must be in the range 1024 - 65535..
        /// </summary>
        internal static string NW_PARAM_NAME_HIPORT_DESCR {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_HIPORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed.
        /// </summary>
        internal static string NW_PARAM_NAME_INSTALLED {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the TCM is physically installed in the controller. Select True to enable configuration of the TCM. Select False to reset all properties to their default state and make the TCM unavailable for configuration..
        /// </summary>
        internal static string NW_PARAM_NAME_INSTALLED_DESCR {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_INSTALLED_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address.
        /// </summary>
        internal static string NW_PARAM_NAME_IP_ADDRESS {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_IP_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the IP address for the network port on the TCM. Network port addresses on the same TCM do not need to be unique..
        /// </summary>
        internal static string NW_PARAM_NAME_IP_ADDRESS_DESCR {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_IP_ADDRESS_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subnet Mask.
        /// </summary>
        internal static string NW_PARAM_NAME_IPSUBNET {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_IPSUBNET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the IP address for the subnet..
        /// </summary>
        internal static string NW_PARAM_NAME_IPSUBNET_DESCR {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_IPSUBNET_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lowest TCP Port.
        /// </summary>
        internal static string NW_PARAM_NAME_LOPORT {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_LOPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional) If the TCM is behind a firewall, the lowest TCP port number that can be used for outgoing connections from the TCM. Must be in the range 1024 - 65535..
        /// </summary>
        internal static string NW_PARAM_NAME_LOPORT_DESCR {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_LOPORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model.
        /// </summary>
        internal static string NW_PARAM_NAME_MODEL {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_MODEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transceiver Mode.
        /// </summary>
        internal static string NW_PARAM_NAME_TX_MODE {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_TX_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the physical connection mode..
        /// </summary>
        internal static string NW_PARAM_NAME_TX_MODE_DESCR {
            get {
                return ResourceManager.GetString("NW_PARAM_NAME_TX_MODE_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow points to be disabled from TriStation 1131. Requires a Download All..
        /// </summary>
        internal static string OP_PARAM_DESC_ALLOW_DISABLE_POINTS {
            get {
                return ResourceManager.GetString("OP_PARAM_DESC_ALLOW_DISABLE_POINTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow secure connections even if server/client certificate is expired..
        /// </summary>
        internal static string OP_PARAM_DESC_ALLOW_EXPIRED_CERT {
            get {
                return ResourceManager.GetString("OP_PARAM_DESC_ALLOW_EXPIRED_CERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn MP Fault LEDs on when server/client certificate expires..
        /// </summary>
        internal static string OP_PARAM_DESC_GENERATE_ALARM_WHEN_EXP {
            get {
                return ResourceManager.GetString("OP_PARAM_DESC_GENERATE_ALARM_WHEN_EXP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of days prior to certificate expiration alarm should be generated..
        /// </summary>
        internal static string OP_PARAM_DESC_NUM_OF_DAYS_BEFORE_ALARM_GEN {
            get {
                return ResourceManager.GetString("OP_PARAM_DESC_NUM_OF_DAYS_BEFORE_ALARM_GEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If keyswitch is turned to Stop, application on controller continues running..
        /// </summary>
        internal static string OP_PARAM_DESC_PREVENT_KEYSWITCH_STOP_FROM_HALTING {
            get {
                return ResourceManager.GetString("OP_PARAM_DESC_PREVENT_KEYSWITCH_STOP_FROM_HALTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent external devices from writing to output tagnames in the application..
        /// </summary>
        internal static string OP_PARAM_DESC_PREVENT_REMOTE_WRITES {
            get {
                return ResourceManager.GetString("OP_PARAM_DESC_PREVENT_REMOTE_WRITES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow controller to act as primary node for time synchronization on the Peer-to-Peer network..
        /// </summary>
        internal static string OP_PARAM_DESC_USE_NODE_TIME_SYNC {
            get {
                return ResourceManager.GetString("OP_PARAM_DESC_USE_NODE_TIME_SYNC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable secure communication between TriStation 1131 and the controller..
        /// </summary>
        internal static string OP_PARAM_DESC_USE_SECURE_COMM {
            get {
                return ResourceManager.GetString("OP_PARAM_DESC_USE_SECURE_COMM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Points to Be Disabled.
        /// </summary>
        internal static string OP_PARAM_NAME_ALLOW_DISABLE_POINTS {
            get {
                return ResourceManager.GetString("OP_PARAM_NAME_ALLOW_DISABLE_POINTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Expired Certificates.
        /// </summary>
        internal static string OP_PARAM_NAME_ALLOW_EXPIRED_CERT {
            get {
                return ResourceManager.GetString("OP_PARAM_NAME_ALLOW_EXPIRED_CERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate Alarm when Certificate Expires.
        /// </summary>
        internal static string OP_PARAM_NAME_GENERATE_ALARM_WHEN_EXP {
            get {
                return ResourceManager.GetString("OP_PARAM_NAME_GENERATE_ALARM_WHEN_EXP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of Days Before Alarm Generation.
        /// </summary>
        internal static string OP_PARAM_NAME_NUM_OF_DAYS_BEFORE_ALARM_GEN {
            get {
                return ResourceManager.GetString("OP_PARAM_NAME_NUM_OF_DAYS_BEFORE_ALARM_GEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent Keyswitch Stop from Halting Application.
        /// </summary>
        internal static string OP_PARAM_NAME_PREVENT_KEYSWITCH_STOP_FROM_HALTING {
            get {
                return ResourceManager.GetString("OP_PARAM_NAME_PREVENT_KEYSWITCH_STOP_FROM_HALTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent Remote Writes to Output Tagnames.
        /// </summary>
        internal static string OP_PARAM_NAME_PREVENT_REMOTE_WRITES {
            get {
                return ResourceManager.GetString("OP_PARAM_NAME_PREVENT_REMOTE_WRITES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Node Time Synchronization.
        /// </summary>
        internal static string OP_PARAM_NAME_USE_NODE_TIME_SYNC {
            get {
                return ResourceManager.GetString("OP_PARAM_NAME_USE_NODE_TIME_SYNC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Secure Communication.
        /// </summary>
        internal static string OP_PARAM_NAME_USE_SECURE_COMM {
            get {
                return ResourceManager.GetString("OP_PARAM_NAME_USE_SECURE_COMM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operating Parameters.
        /// </summary>
        internal static string OPERATING_PARAMETERS {
            get {
                return ResourceManager.GetString("OPERATING_PARAMETERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peer-to-Peer UDP protocol.
        /// </summary>
        internal static string P2P_UDP_PROTOCOL {
            get {
                return ResourceManager.GetString("P2P_UDP_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peer-to-Peer.
        /// </summary>
        internal static string PEER_TO_PEER {
            get {
                return ResourceManager.GetString("PEER_TO_PEER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination UDP Port.
        /// </summary>
        internal static string PEER_TO_PEER_DESTINATION_UDP_PORT {
            get {
                return ResourceManager.GetString("PEER_TO_PEER_DESTINATION_UDP_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the UDP base port number for this node. Do not change this setting unless the TCM is behind a firewall or you want to use a custom port number..
        /// </summary>
        internal static string PEER_TO_PEER_DESTINATION_UDP_PORT_DESCR {
            get {
                return ResourceManager.GetString("PEER_TO_PEER_DESTINATION_UDP_PORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address.
        /// </summary>
        internal static string PEER_TO_PEER_IP_ADDRESS {
            get {
                return ResourceManager.GetString("PEER_TO_PEER_IP_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the IP address for this node..
        /// </summary>
        internal static string PEER_TO_PEER_IP_ADDRESS_DESCR {
            get {
                return ResourceManager.GetString("PEER_TO_PEER_IP_ADDRESS_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network.
        /// </summary>
        internal static string PEER_TO_PEER_NETWORK {
            get {
                return ResourceManager.GetString("PEER_TO_PEER_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the network port the TCM uses to communicate with this Peer-to-Peer node (controller)..
        /// </summary>
        internal static string PEER_TO_PEER_NETWORK_DESCR {
            get {
                return ResourceManager.GetString("PEER_TO_PEER_NETWORK_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UDP Base Port Number: NET 1.
        /// </summary>
        internal static string PEER_TO_PEER_UDP_BASE_PORT_NUM_NET1 {
            get {
                return ResourceManager.GetString("PEER_TO_PEER_UDP_BASE_PORT_NUM_NET1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the UDP base port number for the NET 1 port. Enter 0 to disable Peer-to-Peer on this network..
        /// </summary>
        internal static string PEER_TO_PEER_UDP_BASE_PORT_NUM_NET1_DESCR {
            get {
                return ResourceManager.GetString("PEER_TO_PEER_UDP_BASE_PORT_NUM_NET1_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UDP Base Port Number: NET 2.
        /// </summary>
        internal static string PEER_TO_PEER_UDP_BASE_PORT_NUM_NET2 {
            get {
                return ResourceManager.GetString("PEER_TO_PEER_UDP_BASE_PORT_NUM_NET2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Peer-to-Peer on this network by entering the UDP base port number for the NET 2 port. Peer-to-Peer is disabled on NET 2 by default..
        /// </summary>
        internal static string PEER_TO_PEER_UDP_BASE_PORT_NUM_NET2_DESCR {
            get {
                return ResourceManager.GetString("PEER_TO_PEER_UDP_BASE_PORT_NUM_NET2_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Printer.
        /// </summary>
        internal static string PRINTER {
            get {
                return ResourceManager.GetString("PRINTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line Width.
        /// </summary>
        internal static string PRINTER_PRINT_LINEWIDTH {
            get {
                return ResourceManager.GetString("PRINTER_PRINT_LINEWIDTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the number of characters to print on each line. Must be between 80 -132..
        /// </summary>
        internal static string PRINTER_PRINT_LINEWIDTH_DESCR {
            get {
                return ResourceManager.GetString("PRINTER_PRINT_LINEWIDTH_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server IP Address.
        /// </summary>
        internal static string PRINTER_PRINT_SERVER_IP {
            get {
                return ResourceManager.GetString("PRINTER_PRINT_SERVER_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the IP address of the print server..
        /// </summary>
        internal static string PRINTER_PRINT_SERVER_IP_DESCR {
            get {
                return ResourceManager.GetString("PRINTER_PRINT_SERVER_IP_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network.
        /// </summary>
        internal static string PRINTER_PRINT_SERVER_NW {
            get {
                return ResourceManager.GetString("PRINTER_PRINT_SERVER_NW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the network the print server is connected to..
        /// </summary>
        internal static string PRINTER_PRINT_SERVER_NW_DESCR {
            get {
                return ResourceManager.GetString("PRINTER_PRINT_SERVER_NW_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TCP Port.
        /// </summary>
        internal static string PRINTER_PRINT_SERVER_PORT {
            get {
                return ResourceManager.GetString("PRINTER_PRINT_SERVER_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the TCP port for the print server. The default is for an HP printer. If port restrictions are enabled, must be within the restricted port range..
        /// </summary>
        internal static string PRINTER_PRINT_SERVER_PORT_DESCR {
            get {
                return ResourceManager.GetString("PRINTER_PRINT_SERVER_PORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Printer Number.
        /// </summary>
        internal static string PRINTER_PRINTER_NUMBER {
            get {
                return ResourceManager.GetString("PRINTER_PRINTER_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the printer number. Do not assign the same number to both TCM slots. The default 0 means a printer is not configured..
        /// </summary>
        internal static string PRINTER_PRINTER_NUMBER_DESCR {
            get {
                return ResourceManager.GetString("PRINTER_PRINTER_NUMBER_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Discovery.
        /// </summary>
        internal static string PROTOCOL_PARAMS_AUTODSC {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_AUTODSC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow the Enhanced Diagnostic Monitor to automatically detect this controller on the network when it&apos;s connected via configured port.
        /// </summary>
        internal static string PROTOCOL_PARAMS_AUTODSC_DESCR {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_AUTODSC_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Management Port.
        /// </summary>
        internal static string PROTOCOL_PARAMS_MGMNTPORT {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_MGMNTPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the UDP port used for the Enhanced Diagnostic Monitor connection to communication status information. Cannot be the same as the TSAA or TriStation port numbers..
        /// </summary>
        internal static string PROTOCOL_PARAMS_MGMNTPORT_DESCR {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_MGMNTPORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multicast IP Address.
        /// </summary>
        internal static string PROTOCOL_PARAMS_MULT_IP {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_MULT_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the IP address for TSAA multicast messaging. Bin and/or SOE data available messages will be sent to this address. The default 0.0.0.0 address specifies that multicasting is disabled..
        /// </summary>
        internal static string PROTOCOL_PARAMS_MULT_IP_DESCR {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_MULT_IP_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multicast Update Rate (ms).
        /// </summary>
        internal static string PROTOCOL_PARAMS_MULT_UPDATERATE {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_MULT_UPDATERATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the update rate, in milliseconds, for TSAA IP multicasting. Must be in the range 250 - 2000. Multicast messages are sent at the specified rate..
        /// </summary>
        internal static string PROTOCOL_PARAMS_MULT_UPDATERATE_DESCR {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_MULT_UPDATERATE_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port.
        /// </summary>
        internal static string PROTOCOL_PARAMS_PORT {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the UDP port used for TriStation connections. Cannot be the same as the TSAA or Management port numbers..
        /// </summary>
        internal static string PROTOCOL_PARAMS_PORT_DESCR {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_PORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the UDP port used for TSAA connections. Cannot be the same as the TriStation or Management port numbers. Enter 0 to disable TSAA communication on this port..
        /// </summary>
        internal static string PROTOCOL_PARAMS_TSAA_PORT_DESCR {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_TSAA_PORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port.
        /// </summary>
        internal static string PROTOCOL_PARAMS_TSAAPORT {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_TSAAPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the TSAA protocol version used for multicasting. The selected version must be supported by ALL TSAA clients in the multicast group..
        /// </summary>
        internal static string PROTOCOL_PARAMS_TSAAVER_DESCR {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_TSAAVER_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TSAA Version.
        /// </summary>
        internal static string PROTOCOL_PARAMS_TSAAVERION {
            get {
                return ResourceManager.GetString("PROTOCOL_PARAMS_TSAAVERION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination Gateway IP Address.
        /// </summary>
        internal static string ROUTING_GATEWAY {
            get {
                return ResourceManager.GetString("ROUTING_GATEWAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the IP address of the gateway the controller is connected to. Must be on the NET 1 or NET 2 network..
        /// </summary>
        internal static string ROUTING_GATEWAY_DESCR {
            get {
                return ResourceManager.GetString("ROUTING_GATEWAY_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination IP Address.
        /// </summary>
        internal static string ROUTING_IP_ADDRESS {
            get {
                return ResourceManager.GetString("ROUTING_IP_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the IP address used if the controller is not on the same subnet as other devices..
        /// </summary>
        internal static string ROUTING_IP_ADDRESS_DESCR {
            get {
                return ResourceManager.GetString("ROUTING_IP_ADDRESS_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} | Destination {1}.
        /// </summary>
        internal static string ROUTING_SUBGROUP_DEST {
            get {
                return ResourceManager.GetString("ROUTING_SUBGROUP_DEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination Subnet Mask.
        /// </summary>
        internal static string ROUTING_SUBNET_MASK {
            get {
                return ResourceManager.GetString("ROUTING_SUBNET_MASK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the subnet mask address. Must be the same as the subnet mask defined for NET 1 or NET 2 in the Network properties (above)..
        /// </summary>
        internal static string ROUTING_SUBNET_MASK_DESCR {
            get {
                return ResourceManager.GetString("ROUTING_SUBNET_MASK_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SNTP.
        /// </summary>
        internal static string SNTP {
            get {
                return ResourceManager.GetString("SNTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SNTP Redundant.
        /// </summary>
        internal static string SNTP_REDUNDANT {
            get {
                return ResourceManager.GetString("SNTP_REDUNDANT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Baud Rate.
        /// </summary>
        internal static string SP_PARAM_NAME_BAUDRATE {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_BAUDRATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the data transmission speed for this port..
        /// </summary>
        internal static string SP_PARAM_NAME_BAUDRATE_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_BAUDRATE_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Logical Port.
        /// </summary>
        internal static string SP_PARAM_NAME_CLIENT_PORT {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_CLIENT_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logical port number used by Modbus client functions to access this port. Must be unique for each TCM in a system. Available only when Modbus Client is selected..
        /// </summary>
        internal static string SP_PARAM_NAME_CLIENT_PORT_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_CLIENT_PORT_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Bits.
        /// </summary>
        internal static string SP_PARAM_NAME_DATABITS {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_DATABITS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select how many bits are in the data format. Available only  when Modbus Server ASCII is selected..
        /// </summary>
        internal static string SP_PARAM_NAME_DATABITS_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_DATABITS_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Floating Point Ordering.
        /// </summary>
        internal static string SP_PARAM_NAME_FP_ORDER {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_FP_ORDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select which section of a 32-bit floating point number is read first. High = first 16 bits. Low = last 16 bits..
        /// </summary>
        internal static string SP_PARAM_NAME_FP_ORDER_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_FP_ORDER_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handshake.
        /// </summary>
        internal static string SP_PARAM_NAME_HANDSHAKE {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_HANDSHAKE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select if hardware handshaking should be used to establish valid connections between devices. Required when the Wire Type is 2-Wire, or the Transceiver Mode is RS-485..
        /// </summary>
        internal static string SP_PARAM_NAME_HANDSHAKE_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_HANDSHAKE_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modbus Range: Maximum.
        /// </summary>
        internal static string SP_PARAM_NAME_MB_MAX {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_MB_MAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximium REAL value that can be communicated over Modbus. Can be no more than 32767..
        /// </summary>
        internal static string SP_PARAM_NAME_MB_MAX_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_MB_MAX_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modbus Range: Minimum.
        /// </summary>
        internal static string SP_PARAM_NAME_MB_MIN {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_MB_MIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum REAL value that can be communicated over Modbus. Can be no less than -32768..
        /// </summary>
        internal static string SP_PARAM_NAME_MB_MIN_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_MB_MIN_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modbus Server Address.
        /// </summary>
        internal static string SP_PARAM_NAME_MB_SRVR_ADDRESS {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_MB_SRVR_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the Modbus Server device number (0 - 255). Available only when Modbus Server RTU or Modbus Server ASCII is selected..
        /// </summary>
        internal static string SP_PARAM_NAME_MB_SRVR_ADDRESS_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_MB_SRVR_ADDRESS_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parity.
        /// </summary>
        internal static string SP_PARAM_NAME_PARITY {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_PARITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the type of parity checking to use for detection of data communication errors..
        /// </summary>
        internal static string SP_PARAM_NAME_PARITY_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_PARITY_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol.
        /// </summary>
        internal static string SP_PARAM_NAME_PROTOCOL {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the communication protocol for this port..
        /// </summary>
        internal static string SP_PARAM_NAME_PROTOCOL_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_PROTOCOL_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop Bits.
        /// </summary>
        internal static string SP_PARAM_NAME_STOPBITS {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_STOPBITS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select how many bits to transmit after each character to indicate that transmission of a byte of data is complete..
        /// </summary>
        internal static string SP_PARAM_NAME_STOPBITS_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_STOPBITS_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Termination Type.
        /// </summary>
        internal static string SP_PARAM_NAME_TERMINAL_TYPE {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_TERMINAL_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the type of termination used with Modbus cable connections. Available only if the Transceiver Mode is RS-485..
        /// </summary>
        internal static string SP_PARAM_NAME_TERMINAL_TYPE_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_TERMINAL_TYPE_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transceiver Mode.
        /// </summary>
        internal static string SP_PARAM_NAME_TX_MODE {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_TX_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the physical connection mode. Use RS-232 for point-to-point communication up to 50 ft/15.24 m. Use RS-485 for multi-point communication up to 4,000 ft/1219.2 m..
        /// </summary>
        internal static string SP_PARAM_NAME_TX_MODE_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_TX_MODE_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wire Type.
        /// </summary>
        internal static string SP_PARAM_NAME_WIRE_TYPE {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_WIRE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the type of wire used for serial communication. 2-Wire: A single pair used for Modbus reads and writes. 4-Wire: One pair used for Modbus reads, and a second pair for Modbus writes..
        /// </summary>
        internal static string SP_PARAM_NAME_WIRE_TYPE_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_WIRE_TYPE_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write Enabled.
        /// </summary>
        internal static string SP_PARAM_NAME_WRITE_ENABLED {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_WRITE_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Modbus writes to this port. Available only when Modbus Server RTU or Modbus Server ASCII is selected..
        /// </summary>
        internal static string SP_PARAM_NAME_WRITE_ENABLED_DESCR {
            get {
                return ResourceManager.GetString("SP_PARAM_NAME_WRITE_ENABLED_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Configuration parameters affect the overall operation of the Tricon CX system. You need to define how TriStation 1131 connects to the controller and which features are enabled on the controller. You can also view information about how controller memory is allocated for application data, and input, output, and memory tagnames..
        /// </summary>
        internal static string SYSTEM_CONFIG_DESCRIPTION {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        internal static string SYSTEM_CONFIG_HEADER_DESCRIPTION {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_HEADER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Free.
        /// </summary>
        internal static string SYSTEM_CONFIG_HEADER_FREE {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_HEADER_FREE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group.
        /// </summary>
        internal static string SYSTEM_CONFIG_HEADER_GROUP {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_HEADER_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum.
        /// </summary>
        internal static string SYSTEM_CONFIG_HEADER_MAX {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_HEADER_MAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property.
        /// </summary>
        internal static string SYSTEM_CONFIG_HEADER_PROPERTY {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_HEADER_PROPERTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID.
        /// </summary>
        internal static string SYSTEM_CONFIG_HEADER_ROW_ID {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_HEADER_ROW_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subgroup.
        /// </summary>
        internal static string SYSTEM_CONFIG_HEADER_SUBGROUP {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_HEADER_SUBGROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string SYSTEM_CONFIG_HEADER_TYPE {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_HEADER_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used.
        /// </summary>
        internal static string SYSTEM_CONFIG_HEADER_USED {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_HEADER_USED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        internal static string SYSTEM_CONFIG_HEADER_VALUE {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_HEADER_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to paste system configuration properties because you do not have the appropriate permissions. Contact your administrator to request permission to modify these properties..
        /// </summary>
        internal static string SYSTEM_CONFIG_INVALID_PASTE_PERMISSIONS {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_INVALID_PASTE_PERMISSIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties requiring permissions: {0}..
        /// </summary>
        internal static string SYSTEM_CONFIG_INVALID_PASTE_PERMISSIONS_2 {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_INVALID_PASTE_PERMISSIONS_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory Allocation.
        /// </summary>
        internal static string SYSTEM_CONFIG_MEMORY_ALLOCATION {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_MEMORY_ALLOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Configuration Parameters.
        /// </summary>
        internal static string SYSTEM_CONFIG_SUBHEADER {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_SUBHEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tricon CX {0} - {1} Main Processor.
        /// </summary>
        internal static string SYSTEM_CONFIG_TITLE {
            get {
                return ResourceManager.GetString("SYSTEM_CONFIG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt; COM1 L: {0} COM1 R: {1} COM2 L: {2} COM2 R: {3}.
        /// </summary>
        internal static string TCM_ACCESS_CONTROL_NODE_DESCR {
            get {
                return ResourceManager.GetString("TCM_ACCESS_CONTROL_NODE_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access Control.
        /// </summary>
        internal static string TCM_ACCESS_CONTROL_PARAMS {
            get {
                return ResourceManager.GetString("TCM_ACCESS_CONTROL_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM1:.
        /// </summary>
        internal static string TCM_COM1 {
            get {
                return ResourceManager.GetString("TCM_COM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM2:.
        /// </summary>
        internal static string TCM_COM2 {
            get {
                return ResourceManager.GetString("TCM_COM2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM1: Left.
        /// </summary>
        internal static string TCM_CONFIG_HEADER_1L {
            get {
                return ResourceManager.GetString("TCM_CONFIG_HEADER_1L", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM1: Right.
        /// </summary>
        internal static string TCM_CONFIG_HEADER_1R {
            get {
                return ResourceManager.GetString("TCM_CONFIG_HEADER_1R", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM2: Left.
        /// </summary>
        internal static string TCM_CONFIG_HEADER_2L {
            get {
                return ResourceManager.GetString("TCM_CONFIG_HEADER_2L", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM2: Right.
        /// </summary>
        internal static string TCM_CONFIG_HEADER_2R {
            get {
                return ResourceManager.GetString("TCM_CONFIG_HEADER_2R", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tricon Communication Module (TCM) settings define how the Tricon CX system communicates with external devices. You need to configure network and serial connections, define the protocols used for communication, configure time synchronization with other systems, set up a printer connection, and specify which clients can access TCM resources. When you make changes to these settings, you must download the updated configuration to the controller..
        /// </summary>
        internal static string TCM_CONFIG_PANE_DESCR {
            get {
                return ResourceManager.GetString("TCM_CONFIG_PANE_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Communication Module Configuration.
        /// </summary>
        internal static string TCM_CONFIG_SUBHEADER {
            get {
                return ResourceManager.GetString("TCM_CONFIG_SUBHEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Sync.
        /// </summary>
        internal static string TCM_CONFIG_TIMESYNC_TITLE {
            get {
                return ResourceManager.GetString("TCM_CONFIG_TIMESYNC_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HART DTM.
        /// </summary>
        internal static string TCM_HART_DTM {
            get {
                return ResourceManager.GetString("TCM_HART_DTM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HART-IP.
        /// </summary>
        internal static string TCM_HART_IP {
            get {
                return ResourceManager.GetString("TCM_HART_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HART.
        /// </summary>
        internal static string TCM_HART_PARAMS {
            get {
                return ResourceManager.GetString("TCM_HART_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HART TSAA.
        /// </summary>
        internal static string TCM_HART_TSAA {
            get {
                return ResourceManager.GetString("TCM_HART_TSAA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to paste communication module properties because one or more column headings are missing or have been modified. Verify the copied data includes these headings: ID, Group, Subgroup, Property, COM1: Left, COM1: Right, COM2: Left, COM2: Right..
        /// </summary>
        internal static string TCM_INVALID_PASTE {
            get {
                return ResourceManager.GetString("TCM_INVALID_PASTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to paste module configuration properties because you do not have the appropriate permissions. Contact your administrator to request permission to modify these properties..
        /// </summary>
        internal static string TCM_INVALID_PASTE_PERMISSIONS {
            get {
                return ResourceManager.GetString("TCM_INVALID_PASTE_PERMISSIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Communication Module Configuration &gt; {0} &gt; {1} &gt; {2}: {3}.
        /// </summary>
        internal static string TCM_INVALID_VALUE_MSG {
            get {
                return ResourceManager.GetString("TCM_INVALID_VALUE_MSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Communication Module Configuration &gt; {0} &gt; {1} &gt; {2} &gt; {3}: {4}.
        /// </summary>
        internal static string TCM_INVALID_VALUE_SUBGROUP_MSG {
            get {
                return ResourceManager.GetString("TCM_INVALID_VALUE_SUBGROUP_MSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left.
        /// </summary>
        internal static string TCM_LEFT {
            get {
                return ResourceManager.GetString("TCM_LEFT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modbus TCP.
        /// </summary>
        internal static string TCM_MODBUS_TCP_PARAMS {
            get {
                return ResourceManager.GetString("TCM_MODBUS_TCP_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network.
        /// </summary>
        internal static string TCM_NETWORK_PARAMS {
            get {
                return ResourceManager.GetString("TCM_NETWORK_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left.
        /// </summary>
        internal static string TCM_PARAM_LEFT_SLOT {
            get {
                return ResourceManager.GetString("TCM_PARAM_LEFT_SLOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NET 1.
        /// </summary>
        internal static string TCM_PARAM_NET1 {
            get {
                return ResourceManager.GetString("TCM_PARAM_NET1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NET 2.
        /// </summary>
        internal static string TCM_PARAM_NET2 {
            get {
                return ResourceManager.GetString("TCM_PARAM_NET2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right.
        /// </summary>
        internal static string TCM_PARAM_RIGHT_SLOT {
            get {
                return ResourceManager.GetString("TCM_PARAM_RIGHT_SLOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TriStation: NET 1.
        /// </summary>
        internal static string TCM_PARAM_TS_NET1 {
            get {
                return ResourceManager.GetString("TCM_PARAM_TS_NET1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TriStation: NET 2.
        /// </summary>
        internal static string TCM_PARAM_TS_NET2 {
            get {
                return ResourceManager.GetString("TCM_PARAM_TS_NET2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TSAA: NET 1.
        /// </summary>
        internal static string TCM_PARAM_TSAA_NET1 {
            get {
                return ResourceManager.GetString("TCM_PARAM_TSAA_NET1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TSAA: NET 2.
        /// </summary>
        internal static string TCM_PARAM_TSAA_NET2 {
            get {
                return ResourceManager.GetString("TCM_PARAM_TSAA_NET2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt; COM1 L: {0}| Port {1} | {2} COM1 R: {3}| Port {4} | {5} COM2 L: {6}| Port {7} | {8} COM2 R: {9}| Port {10} | {11}.
        /// </summary>
        internal static string TCM_PEER_TO_PEER_NODE_DESCR {
            get {
                return ResourceManager.GetString("TCM_PEER_TO_PEER_NODE_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt; COM1 L: {0} COM1 R: {1} COM2 L: {2} COM2 R: {3}.
        /// </summary>
        internal static string TCM_PEER_TO_PEER_NODE_DESCR_SPLIT {
            get {
                return ResourceManager.GetString("TCM_PEER_TO_PEER_NODE_DESCR_SPLIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node {0}.
        /// </summary>
        internal static string TCM_PEER_TO_PEER_NODE_NUMBER {
            get {
                return ResourceManager.GetString("TCM_PEER_TO_PEER_NODE_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peer-to-Peer.
        /// </summary>
        internal static string TCM_PEER_TO_PEER_PARAMS {
            get {
                return ResourceManager.GetString("TCM_PEER_TO_PEER_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Printer.
        /// </summary>
        internal static string TCM_PRINTER_PARAMS {
            get {
                return ResourceManager.GetString("TCM_PRINTER_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocols.
        /// </summary>
        internal static string TCM_PROTOCOL_PARAMS {
            get {
                return ResourceManager.GetString("TCM_PROTOCOL_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right.
        /// </summary>
        internal static string TCM_RIGHT {
            get {
                return ResourceManager.GetString("TCM_RIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Routing.
        /// </summary>
        internal static string TCM_ROUTING_PARAMS {
            get {
                return ResourceManager.GetString("TCM_ROUTING_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serial Ports.
        /// </summary>
        internal static string TCM_SERIALPORT_PARAMS {
            get {
                return ResourceManager.GetString("TCM_SERIALPORT_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM1: {0}.
        /// </summary>
        internal static string TCM_SLOT_COM_1 {
            get {
                return ResourceManager.GetString("TCM_SLOT_COM_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM2: {0}.
        /// </summary>
        internal static string TCM_SLOT_COM_2 {
            get {
                return ResourceManager.GetString("TCM_SLOT_COM_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty.
        /// </summary>
        internal static string TCM_SLOT_EMPTY {
            get {
                return ResourceManager.GetString("TCM_SLOT_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serial Port 1.
        /// </summary>
        internal static string TCM_SUBGROUP_SERIALPORT_1 {
            get {
                return ResourceManager.GetString("TCM_SUBGROUP_SERIALPORT_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serial Port 2.
        /// </summary>
        internal static string TCM_SUBGROUP_SERIALPORT_2 {
            get {
                return ResourceManager.GetString("TCM_SUBGROUP_SERIALPORT_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Sync.
        /// </summary>
        internal static string TCM_TIMESYNC_PARAMS {
            get {
                return ResourceManager.GetString("TCM_TIMESYNC_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Synchronization Configuration.
        /// </summary>
        internal static string TIMESYNC_CONFIG {
            get {
                return ResourceManager.GetString("TIMESYNC_CONFIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the network the SNTP server is connected to..
        /// </summary>
        internal static string TIMESYNC_NETWORK_DESCR {
            get {
                return ResourceManager.GetString("TIMESYNC_NETWORK_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol.
        /// </summary>
        internal static string TIMESYNC_PARAMS_PROTOCOL {
            get {
                return ResourceManager.GetString("TIMESYNC_PARAMS_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the protocol to use for time synchronization. Select Peer-to-Peer if this controller is the primary node that other Triconex controllers will synchronize their time with..
        /// </summary>
        internal static string TIMESYNC_PARAMS_PROTOCOL_DESCR {
            get {
                return ResourceManager.GetString("TIMESYNC_PARAMS_PROTOCOL_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SNTP Server IP Address.
        /// </summary>
        internal static string TIMESYNC_PARAMS_SNTP_IP {
            get {
                return ResourceManager.GetString("TIMESYNC_PARAMS_SNTP_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the IP address of the SNTP server to synchronize time with..
        /// </summary>
        internal static string TIMESYNC_PARAMS_SNTP_IP_DESCR {
            get {
                return ResourceManager.GetString("TIMESYNC_PARAMS_SNTP_IP_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Time Synchronization.
        /// </summary>
        internal static string TIMESYNC_PARAMS_USE {
            get {
                return ResourceManager.GetString("TIMESYNC_PARAMS_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronize time to an SNTP server or with other Triconex systems on the Peer-to-Peer network..
        /// </summary>
        internal static string TIMESYNC_PARAMS_USE_DESCR {
            get {
                return ResourceManager.GetString("TIMESYNC_PARAMS_USE_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triconex Management protocol.
        /// </summary>
        internal static string TRICONEX_MANAGEMENT_PROTOCOL {
            get {
                return ResourceManager.GetString("TRICONEX_MANAGEMENT_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TriStation 1131 Communication Parameters.
        /// </summary>
        internal static string TRISTATION_1131_COMM_PARAMS {
            get {
                return ResourceManager.GetString("TRISTATION_1131_COMM_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NOTICE
        ///
        ///POTENTIAL UNINTENDED OPERATION
        ///
        ///You must perform a Download All after changing the {0} property setting. Before making a change to this property, analyze the impact of the controller being halted during the Download All process. 
        ///
        ///Failure to follow these instructions can result in an unplanned safety system shutdown.
        ///
        ///Click OK for more information..
        /// </summary>
        internal static string TRISTATION_ALLOW_POINTS_SAFETY_MESSAGE {
            get {
                return ResourceManager.GetString("TRISTATION_ALLOW_POINTS_SAFETY_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TriStation 1131: ALERT.
        /// </summary>
        internal static string TRISTATION_MSG_ALERT {
            get {
                return ResourceManager.GetString("TRISTATION_MSG_ALERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TriStation 1131: ERROR DETECTED.
        /// </summary>
        internal static string TRISTATION_MSG_ERROR_DETECTED {
            get {
                return ResourceManager.GetString("TRISTATION_MSG_ERROR_DETECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TriStation 1131: NOTE.
        /// </summary>
        internal static string TRISTATION_MSG_NOTE {
            get {
                return ResourceManager.GetString("TRISTATION_MSG_NOTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TriStation 1131: QUERY.
        /// </summary>
        internal static string TRISTATION_MSG_QUERY {
            get {
                return ResourceManager.GetString("TRISTATION_MSG_QUERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TriStation protocol.
        /// </summary>
        internal static string TRISTATION_PROTOCOL {
            get {
                return ResourceManager.GetString("TRISTATION_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must perform a Download All after changing the {0} property setting. Are you sure you want to make this change?
        ///
        ///Click Yes to change this property and set the project state to Download All (if it is not already). 
        ///Click No to leave this property unchanged..
        /// </summary>
        internal static string TRISTATION_REBUILD_ALL_REQUIRED {
            get {
                return ResourceManager.GetString("TRISTATION_REBUILD_ALL_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Configuration &gt; {0}: {1}.
        /// </summary>
        internal static string TS_INVALID_VALUE_MSG {
            get {
                return ResourceManager.GetString("TS_INVALID_VALUE_MSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TSAA protocol.
        /// </summary>
        internal static string TSAA_PROTOCOL {
            get {
                return ResourceManager.GetString("TSAA_PROTOCOL", resourceCulture);
            }
        }
    }
}
